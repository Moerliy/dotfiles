#+title: Hyprland Config
#+author: Moritz Gleissner
#+property: header-args :tangle hyprland.conf

* Forword
This org document is used as documentation, explanations and config files for my Hyprland setup. I recommend using this file to configure your Hyprland too, if you decide to build upon this configuration. Using Emacs is adviced but if you don't want to do so, you can export the code blocks with [[https://github.com/OrgTangle/ntangle][ntangle]]. Maybe I will add a user script to do so in the future but this will have to do for now.
The philosophy of my repo is "have everything in the same module where you need it", so many of the configuration files that are needed for my Hyprland setup are in the Hyprland directory itself. This has some pros and cons.
I should mention that most of the programs that require configuration files need to be initialized with the path to sad config and that is where most of the custom scriptscome into play.

I use Arch on an M1 mac btw so you should have a good look at the required packages and maybe substitute some of them for there better counterpart, but as far as I'm convinced all of the packages that are being used, none of them isn't capable of running on x86_64 architecture.

I also want to mention that this repo was build on [[https://github.com/nawfalmrouyan/hyprland][nawfalmrouyan's]] dotfiles and customized to fit my needs but you shout check out the original, especially if you have any problems getting my config to work.

* Table Of Contents :toc:
- [[#forword][Forword]]
- [[#installation][Installation]]
  - [[#1-clone][1. Clone]]
  - [[#2-packages][2. Packages]]
- [[#file-variables][File-Variables]]
- [[#env-variables][Env-Variables]]
- [[#base-confic][Base Confic]]
  - [[#general][General]]
  - [[#decoration][Decoration]]
  - [[#animations][Animations]]
  - [[#input][Input]]
  - [[#gestures][Gestures]]
  - [[#misc][Misc]]
  - [[#binds][Binds]]
  - [[#debug][Debug]]
- [[#base-keywords][Base Keywords]]
  - [[#peripheral-device][Peripheral Device]]
  - [[#blur-layer-surface][Blur Layer-Surface]]
- [[#monitor][Monitor]]
- [[#keybinds][Keybinds]]
  - [[#main][Main]]
  - [[#open][Open]]
  - [[#master-layout][Master Layout]]
  - [[#backlight][Backlight]]
  - [[#volumen][Volumen]]
  - [[#resize][Resize]]
  - [[#move][Move]]
  - [[#focus][Focus]]
  - [[#grimblast][Grimblast]]
  - [[#keychordless][Keychordless]]
  - [[#not-working][Not Working]]
- [[#dispatchers][Dispatchers]]
- [[#window-rules][Window Rules]]
- [[#animations-1][Animations]]
- [[#dwindle-layout][Dwindle Layout]]
- [[#master-layout-1][Master Layout]]

* Installation
As mentioned in [[Forword]] the packages for this repo where chosen for Aarch64 so in some cases these are worse alternative's then there x86_64 counterpart.
I recommend using all the [[https://github.com/Moerliy/dotfiles][dotfiles]] together but it is possible to just use Hyprland with some additional personal changes.

** 1. Clone
If you don't have existing dofiles you can clone my hole repository (for that you should have a look at my [[../../README.org][README]] in my dotfile directory) or just Hyprland:
#+begin_src bash :tangle no
git clone --no-checkout https://github.com/Moerliy/dotfiles.git
cd dotfiles
git sparse-checkout init --cone
git sparse-checkout set .config/hypr
git checkout origin/master
cp -r .config/hypr ~/.config/hypr
#+end_src

** 2. Packages
This will import all the packages listed below:

#+begin_src bash :tangle install-packages.sh
#!/bin/bash
yay -Syu --noconfirm --needed hyprland-git mako pipewire wireplumber alsa-utils pipewire-alsa pipewire-pulse pulsemixer bluez bluez-utils xdg-desktop-portal-hyprland-git polkit-kde-agent qt5-wayland qt6-wayland sddm-catppuccin-git waybar-hyprland-git alacritty kitty qt5ct lxappearance catppuccin-gtk-theme-mocha firefox armcord-git youtubemusic-nativefier nextcloud-client nautilus electron20-bin electron24-bin wlogout swayidle swaylock-effects wofi pamixer playerctl slurp grim jq swww-git wf-recorder wl-clipboard copyq wlroots light xorg-xwayland yad viewnior mpv bemenu-wayland hyprpicker-git fish starship neofetch btop htop vim neovim exa packer breeze bat-extras checkupdates+aur waybar-mpris-git postman-bin

# oh my fish instalation
# if [ ! -d "$HOME/.local/share/omf" ]; then
#     curl https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install | fish
# fi

# check and delete other xdg-desktop-portal's
echo "removing other xdg-desktop-portal instances"
yay -R --noconfirm xdg-desktop-portal-gnome xdg-desktop-portal-gtk
#+end_src

#+begin_src emacs-lisp :tangle install-fonts.sh
yay -Syu --noconfirm nerd-fonts ttf-hack ttf-ubuntu-font-family ttf-kanjistrokeorders ttf-iosevka adobe-source-han-mono-jp-fonts noto-fonts-emoji ttf-jetbrains-mono
#+end_src

*** Base Hyprland
+ [[https://wiki.hyprland.org/Getting-Started/Installation/][hyprland]]
+ [[https://github.com/emersion/mako][mako]] for notification
+ [[https://github.com/PipeWire/pipewire][pipewire]] for screen sharing
+ [[https://github.com/PipeWire/wireplumber][wireplumber]] for screen sharing
+ alsa-utils
+ pipewire-alsa
+ pipewire-pulse
+ bluez
+ bluez-utils
+ [[https://github.com/hyprwm/xdg-desktop-portal-hyprland][xdg-desktop-portal-hyprland]] frontend service for Flatpak and possibly other desktop containment frameworks
+ [[https://github.com/freedesktop/polkit][polkit]] authentication agent (kde version) [needs change in config files]
+ [[https://github.com/qt/qtwayland][qt5-wayland]]
+ [[https://github.com/qt/qtwayland][qt6-wayland]]
*** Login Manager (use one)
+ [[https://github.com/sddm/sddm][sddm]] (and enable with systemctl)
*** Status Bar (use one)
+ [[https://github.com/Alexays/Waybar][waybar]] in my case the hyprland-git version
*** Terminal (use one)
+ [[https://github.com/alacritty/alacritty][alacritty]] terminal (config not in hypr module)
+ [[https://github.com/kovidgoyal/kitty][kitty]] (not working on my setup)
+ fish (shell)
*** Themes
+ [[https://github.com/desktop-app/qt5ct][qt5ct]] qt5 configure
+ [[https://github.com/lxde/lxappearance][lxappearance]] (conig?)
+ [[https://github.com/catppuccin/catppuccin][catppuccin-mocha]] gtk theme
+ oh-my-fish (fish theme)
+ starship (shell theme)
+ breeze
*** Fonts
+ nerd-fonts
+ JetBrains Mono
+ iosevka
+ Hack
+ Ubuntu
+ kanjistrokeorders
+ adobe-source-han-mono-jp-fonts
+ noto-fonts-emoji
*** Used utility
+ [[https://github.com/mozilla/?q=firefox&type=all&language=&sort=stargazers][firefox]] browser
+ [[https://github.com/discord][discord]] messenger service
+ [[https://github.com/th-ch/youtube-music][youtubemusic]] music player (nativefier)
+ [[https://github.com/nextcloud][nextcloud]] file sync (not working)
+ [[https://github.com/GNOME/nautilus][nautilus]] file viewer
+ [[https://github.com/electron/electron][electorn]]
+ postman
+ emacs (doom) custom IDE
+ vim
+ neovim
+ neofetch
+ exa (better ls)
+ htop
+ btop
+ bat (with extras)
+ waybar-mpri

*** Custom Scripts
Programs that are used in scripts will interact most likely with hyprland or other programs that are run inside this config. For that mather there configs will be stored inside the hypr directory and not at there usual place.
+ [[https://github.com/ArtsyMacaw/wlogout][wlogout]] as a logout manager
+ [[https://github.com/swaywm/swayidle][swayidle]] as a idle daemon
+ [[https://github.com/mortie/swaylock-effects][swaylock]] for lockscreen (config not in hypr module)
+ [[https://github.com/uncomfyhalomacro/wofi][wofi]] menu
+ [[https://github.com/cdemoulins/pamixer][pamaixer]] audiomixer
+ [[https://github.com/altdesktop/playerctl][playerctl]] audiocontrol
+ [[https://github.com/emersion/slurp][slurp]] region selector for wayland
+ [[https://github.com/GrimAnticheat/Grim][grim]] screenshot utility
+ [[https://github.com/stedolan/jq][jq]] json utility to parse hyprctl
+ [[https://github.com/Horus645/swww][swww]] wallpaper utility
+ [[https://github.com/ammen99/wf-recorder][wf-recorder]] screen recorder
+ [[https://github.com/bugaevc/wl-clipboard][wl-clipboard]] clipboard
+ [[https://github.com/hluk/CopyQ][copyq]] advanced clipboard
+ [[https://gitlab.freedesktop.org/wlroots/wlroots][wlroots]] Pluggable, composable, unopinionated modules for building a Wayland compositor
+ [[https://github.com/haikarainen/light][light]] for backlight control
+ [[https://archlinux.org/packages/extra/x86_64/xorg-xwayland/][xorg-xwayland]]
+ [[https://github.com/v1cont/yad][yad]] display GTK+ in terminal
+ [[https://github.com/hellosiyan/Viewnior][viewnior]] for screenshot
+ [[https://github.com/mpv-player/mpv][mpv]] cl-musicplayer
+ [[https://github.com/Cloudef/bemenu][bemenu]] (wayland version)
+ [[https://github.com/hyprwm/hyprpicker][hyprpicker]] wlroots-compatible Wayland color picker
+ checkupdates+aur

* File-Variables
#+begin_src conf
source = $HOME/.config/hypr/mocha.conf

$mainMod = SUPER
$localBin = $HOME/.local/bin
$scriptsDir = $HOME/.config/hypr/scripts

$term = kitty
$menu = $scriptsDir/menu
$powermenu = $scriptsDir/powermenu  # redundant because of wlogout and never used
$volume = $scriptsDir/volume
$backlight = $scriptsDir/brightness
$kbd_backlight = $scriptsDir/kbd-brightness
$screenshot = $scriptsDir/screenshot
$lock = $scriptsDir/lockscreen
$logout = $scriptsDir/wlogout
$colorpicker = $scriptsDir/colorpicker
$wofi_beats = $scriptsDir/wofi-beats
$files = nautilus
$browser = firefox
$electron_flags = -enable-features=UseOzonePlatform -ozone-platform=wayland
$music = youtubemusic-nativefier
$discord = armcord $electron_flags
#+end_src

* Env-Variables
#+begin_src conf
source = ~/.config/secrets/hyprlandenv

env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_DESKTOP,Hyperland
env = XDG_SESSION_TYPE,wayland

env = QT_QPA_PLATFORMTHEME,qt6ct
env = QT_QPA_PLATFORM,wayland;xcb
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
#env = QT_PLUGIN_PATH,/usr/lib/qt/plugins/

env = GDK_BACKEND,wayland,x11

env = SDL_VIDEODRIVER,wayland
env = _JAVA_AWT_WM_NONREPARENTING,1
env = WLR_NO_HARDWARE_CURSORS,1
env = XCURSOR_THEME,Catppuccin-Mocha-Mauve-Cursor
env = XCURSOR_SIZE,24
env = GTK_THEME,Catppuccin-Mocha-Standard-Mauve-dark

env = MOZ_DISABLE_RDD_SANDBOX,1
env = MOZ_ENABLE_WAYLAND,1

env = PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION,python
env = ANKI_WAYLAND,1

#env = MESA_GL_VERSION_OVERRIDE,3.3
#env = MESA_GLSL_VERSION_OVERRIDE,330
#env = MESA_GLES_VERSION_OVERRIDE,3.1

env = GTK_IM_MODULE,ibus
env = QT_IM_MODULE,ibus
env = XMODIFIERS,@im=ibus

# env = HYPRLAND_LOG_WLR=1
#+end_src

* Base Confic
** General
#+begin_src conf
general {
  gaps_in = 5
  gaps_out = 5
  border_size = 3
  col.active_border = $mauve $blue 45deg
  col.inactive_border = $overlay0
  cursor_inactive_timeout = 5
  resize_on_border = true
  hover_icon_on_border = true

  layout = master
}
#+end_src

** Decoration
#+begin_src conf
decoration {
  rounding = 5
  multisample_edges = true
  active_opacity = 1.0
  # inactive_opacity = 0.9
  fullscreen_opacity = 1.0
  blur {
    #enabled = false
    size = 3
    passes = 3
    new_optimizations = on
  }

  # set drop_shadow = true to enable
  drop_shadow = true
  shadow_ignore_window = true
  shadow_offset = 7 7
  shadow_range = 5
  shadow_render_power = 2
  col.shadow = rgba(00000077)

  dim_inactive = false
  dim_strength = 0.1
  dim_special = 0.5
  dim_around = 0.5
}
#+end_src

** Animations
#+begin_src conf
animations {
  enabled = true

  # Beziers
  bezier = simple, 0.16, 1, 0.3, 1
  bezier = tehtarik, 0.68, -0.55, 0.265, 1.55
  bezier = overshot, 0.05, 0.9, 0.1, 1.05
  bezier = smoothOut, 0.36, 0, 0.66, -0.56
  bezier = smoothIn, 0.25, 1, 0.5, 1

  animation = windows, 1, 5, overshot, popin
  animation = windowsOut, 1, 4, tehtarik, slide
  animation = fade, 1, 10, simple
  animation = workspaces, 1, 6, simple, slide
  animation = specialWorkspace, 1, 6, simple, slidevert
}
#+end_src

** Input
#+begin_src conf
input {
  kb_layout = de,us
  #kb_variant = mac
  sensitivity = 0.25
  accel_profile = flat
  follow_mouse = 1
  numlock_by_default = true

  touchpad {
    scroll_factor = 0.2
    natural_scroll = false
    tap-to-click = false
    drag_lock = true
    disable_while_typing = true
  }
}
#+end_src

** Gestures
#+begin_src conf
gestures {
  workspace_swipe = true
  workspace_swipe_fingers = 3
  workspace_swipe_invert = false
}
#+end_src

** Misc
#+begin_src conf
misc {
  disable_hyprland_logo = true
  disable_splash_rendering = true
  mouse_move_enables_dpms = true
  no_direct_scanout = true #for fullscreen games
  enable_swallow = true
  swallow_regex = ^(alacritty)$
  focus_on_activate = true
}
#+end_src

** Binds
#+begin_src conf
binds {
  workspace_back_and_forth = true
}
#+end_src

** Debug
#+begin_src conf
debug {
  # overlay = true
  # damage_blink = true
}
#+end_src

* Base Keywords
** Peripheral Device
#+begin_src conf
device:epic mouse V1 {
  sensitivity = -0.5
}

device:DPB Ferris sweep {
  kb_layout = us
}

device:urchin-keyboard {
  kb_layout = us
}
#+end_src

** Blur Layer-Surface
#+begin_src conf
# blurls = waybar
blurls = gtk-layer-shell
blurls = lockscreen
#+end_src
* Monitor
#+begin_src conf
monitor = eDP-1, preferred, auto, 1.5
workspace = eDP-1,1
monitor = HDMI-A-1, 2560x1440@144, 0x0, 1
workspace = HDMI-A-1,1
monitor = DP-2, 3840x2160@59, -2560x0, 1.5
workspace = DP-2,8
monitor = , preferred, auto, 1
#+end_src

* Keybinds
The keybinds folow the concept of keychords and use Hyprland submap system.

** Main
#+begin_src conf
bind = $mainMod, Space, submap, supmaper
submap = supmaper
bind = , escape, submap, reset
bind = , O, submap, open
bind = , L, submap, masterlayout
bind = , B, submap, backlight
bind = , V, submap, volume
bind = , R, submap, resize
bind = , M, submap, move
bind = , F, submap, focus
bind = , G, submap, grimblast
bind = , S, togglespecialworkspace,
bind = , S, submap, reset
bind = SHIFT, S, movetoworkspace, special
bind = SHIFT, S, submap, reset
submap = reset
#+end_src

** Open
#+begin_src conf
submap = open
bind = , escape, submap, reset
bind = , Q, killactive
bind = , Q, submap, reset
bind = , T, exec, $term
bind = , T, submap, reset
bind = , E, exec, emacsclient -c -a emacs
bind = , E, submap, reset
bind = , B, exec, [workspace 2] MOZ_USE_XINPUT2=1 $browser
bind = , B, submap, reset
bind = , D, exec, $discord
bind = , D, submap, reset
bind = , C, exec, $scriptsDir/menu
bind = , C, submap, reset
bind = , M, exec, $music $electron_flags
bind = , M, submap, reset
bind = , A, exec, $HOME/.local/bin/anki
bind = , A, submap, reset
bind = , S, exec, emacsclient -e '(make-orgcapture-frame)'
bind = , S, submap, reset
bind = , P, exec, postman $electron_flags
bind = , P, submap, reset

submap = reset
#+end_src

** Master Layout
#+begin_src conf
submap = masterlayout
bind = , escape, submap, reset
bind = , I, layoutmsg, addmaster
bind = , I, submap, reset
bind = , D, layoutmsg, removemaster
bind = , D, submap, reset
submap = reset
#+end_src

** Backlight
#+begin_src conf
submap = backlight
bind = , escape, submap, reset
binde = , K, exec, $backlight --inc
binde = , J, exec, $backlight --dec
binde = , H, exec, $kbd_backlight --dec
binde = , L, exec, $kbd_backlight --inc
binde = , up, exec, $backlight --inc
binde = , down, exec, $backlight --dec
binde = , left, exec, $kbd_backlight --dec
binde = , right, exec, $kbd_backlight --inc
submap = reset
#+end_src

** Volumen
#+begin_src conf
submap = volume
bind = , escape, submap, reset
binde = , K, exec, $volume --inc
binde = , J, exec, $volume --dec
binde = , up, exec, $volume --inc
binde = , down, exec, $volume --dec
binde = , D, exec, $volume --toggle
binde = , D, submap, reset
binde = , M, exec, $volume --toggle-mic
binde = , M, submap, reset
submap = reset
#+end_src

** Resize
#+begin_src conf
submap = resize
bind = , escape, submap, reset
binde = , H, resizeactive,-50 0
binde = , L, resizeactive,50 0
binde = , K, resizeactive,0 -50
binde = , J, resizeactive,0 50
binde = , left, resizeactive,-50 0
binde = , right, resizeactive,50 0
binde = , up, resizeactive,0 -50
binde = , down, resizeactive,0 50
submap = reset
#+end_src

** Move
#+begin_src conf
submap = move
bind = , escape, submap, reset
bind = , H, movewindow, l
bind = , L, movewindow, r
bind = , K, movewindow, u
bind = , J, movewindow, d
bind = , left, movewindow, l
bind = , right, movewindow, r
bind = , up, movewindow, u
bind = , down, movewindow, d
bind = , 1, exec, hyprctl dispatch movetoworkspace 1
bind = , 2, exec, hyprctl dispatch movetoworkspace 2
bind = , 3, exec, hyprctl dispatch movetoworkspace 3
bind = , 4, exec, hyprctl dispatch movetoworkspace 4
bind = , 5, exec, hyprctl dispatch movetoworkspace 5
bind = , 6, exec, hyprctl dispatch movetoworkspace 6
bind = , 7, exec, hyprctl dispatch movetoworkspace 7
bind = , 8, exec, hyprctl dispatch movetoworkspace 8
bind = , 9, exec, hyprctl dispatch movetoworkspace 9
bind = , 0, exec, hyprctl dispatch movetoworkspace 10
bind = SHIFT, H, exec, hyprctl dispatch movetoworkspace e-1
bind = SHIFT, L, exec, hyprctl dispatch movetoworkspace e+1
bind = SHIFT, left, exec, hyprctl dispatch movetoworkspace e-1
bind = SHIFT, right, exec, hyprctl dispatch movetoworkspace e+1
submap = reset
#+end_src

** Focus
#+begin_src conf
submap = focus
bind = , Q, killactive
bind = , escape, submap, reset
bind = , left, movefocus, l
bind = , right, movefocus, r
bind = , up, movefocus, u
bind = , down, movefocus, d
bind = , H, movefocus, l
bind = , L, movefocus, r
bind = , K, movefocus, u
bind = , J, movefocus, d
bind = , 1, exec, hyprctl dispatch workspace 1
bind = , 2, exec, hyprctl dispatch workspace 2
bind = , 3, exec, hyprctl dispatch workspace 3
bind = , 4, exec, hyprctl dispatch workspace 4
bind = , 5, exec, hyprctl dispatch workspace 5
bind = , 6, exec, hyprctl dispatch workspace 6
bind = , 7, exec, hyprctl dispatch workspace 7
bind = , 8, exec, hyprctl dispatch workspace 8
bind = , 9, exec, hyprctl dispatch workspace 9
bind = , 0, exec, hyprctl dispatch workspace 10
bind = SHIFT, H, exec, hyprctl dispatch workspace e-1
bind = SHIFT, L, exec, hyprctl dispatch workspace e+1
bind = SHIFT, left, exec, hyprctl dispatch workspace e-1
bind = SHIFT, right, exec, hyprctl dispatch workspace e+1
submap = reset
#+end_src

** Grimblast
#+begin_src conf
submap = grimblast
bind = , escape, submap, reset
bind = , O, exec, $scriptsDir/grimblast -n copy output
bind = , O, submap, reset
bind = , S, exec, $scriptsDir/grimblast -n copy screen
bind = , S, submap, reset
bind = , W, exec, $scriptsDir/grimblast -n copy active
bind = , W, submap, reset
bind = , A, exec, $scriptsDir/grimblast -n copy area
bind = , A, submap, reset
submap = reset
#+end_src
** Keychordless
#+begin_src conf
bind = $mainMod, Q, killactive,
bind = $mainMod SHIFT, Q, exit,
bind = $mainMod, C, exec, $menu
bind = $mainMod, Return, exec, $term
bind = $mainMod, W, exec, [workspace 2] MOZ_USE_XINPUT2=1 $browser
bind = $mainMod SHIFT, E, exec, $files      # rethink binds
bind = $mainMod SHIFT, O, exec, $colorpicker
bind = $mainMod SHIFT, D, exec, $discord
bind = $mainMod SHIFT, L, exec, $lock
bind = $mainMod, Escape, exec, $logout
bindr = $mainMod SHIFT, C, exec, pkill bemenu || $scriptsDir/bemenu_input -l    # terminal command without terminal
bind = $mainMod, Y, exec, $music      # rethink binds

# Night mode (blue filter)
bind = $mainMod, T, exec, hyprctl keyword decoration:screen_shader $scriptsDir/flux.glsl
bind = $mainMod SHIFT, T, exec, hyprctl keyword decoration:screen_shader "[[EMPTY]]"

# Screenshots
bind = , Print, exec, $scriptsDir/grimblast -n copysave output
bind = $mainMod, Print, exec, $scriptsDir/grimblast -n copysave screen
bind = SHIFT, Print, exec, $scriptsDir/grimblast -n copy output
bind = CTRL, Print, exec, $scriptsDir/grimblast -n copysave active
bind = $mainMod CTRL, Print, exec, $scriptsDir/grimblast -n copysave area

# Special Keys
bindl = , xf86audioraisevolume, exec, $volume --inc
bindl = , xf86audiolowervolume, exec, $volume --dec
bindl = , xf86audiomute, exec, $volume --toggle
bindl = , xf86monbrightnessup, exec, $brightness --inc
bindl = , xf86monbrightnessdown, exec, $brightness --dec
bindl = , xf86audioplay, exec, playerctl play-pause
bindl = , xf86audionext, exec, playerctl next
bindl = , xf86audioprev, exec, playerctl previous

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window and follow to workspace
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10
bind = $mainMod SHIFT, bracketleft, movetoworkspace, -1
bind = $mainMod SHIFT, bracketright, movetoworkspace, +1

# Move active window to a workspace
bind = $mainMod CTRL, 1, movetoworkspacesilent, 1
bind = $mainMod CTRL, 2, movetoworkspacesilent, 2
bind = $mainMod CTRL, 3, movetoworkspacesilent, 3
bind = $mainMod CTRL, 4, movetoworkspacesilent, 4
bind = $mainMod CTRL, 5, movetoworkspacesilent, 5
bind = $mainMod CTRL, 6, movetoworkspacesilent, 6
bind = $mainMod CTRL, 7, movetoworkspacesilent, 7
bind = $mainMod CTRL, 8, movetoworkspacesilent, 8
bind = $mainMod CTRL, 9, movetoworkspacesilent, 9
bind = $mainMod CTRL, 0, movetoworkspacesilent, 10
bind = $mainMod CTRL, bracketleft, movetoworkspacesilent, -1
bind = $mainMod CTRL, bracketright, movetoworkspacesilent, +1

# Special workspace
bind = $mainMod SHIFT, U, movetoworkspace, special
bind = $mainMod, U, togglespecialworkspace,

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1     # not working
bind = $mainMod, mouse_up, workspace, e-1       # not working

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Window
bind = $mainMod, F, fullscreen
bind = $mainMod CTRL, F, fakefullscreen
bind = $mainMod, V, togglefloating,
bind = $mainMod SHIFT, V, exec, hyprctl dispatch workspaceopt allfloat
bind = $mainMod, J, layoutmsg, cyclenext
bind = $mainMod, K, layoutmsg, cycleprev
bind = $mainMod SHIFT, Return, layoutmsg, swapwithmaster
bind = $mainMod, I, layoutmsg, addmaster
bind = $mainMod, D, layoutmsg, removemaster
bind = $mainMod SHIFT, period, layoutmsg, orientationnext
bind = $mainMod SHIFT, comma, layoutmsg, orientationprev
bind = $mainMod CTRL, comma, layoutmsg, focusmaster
bind = $mainMod, L, exec, $scriptsDir/changeLayout

# only in Dwindle layout. Too lazy to include in changeLayout script
bind = $mainMod, G, togglegroup
bind = $mainMod, tab, changegroupactive

#+end_src

** Not Working
#+begin_src conf
bindr = $mainMod SHIFT, Y, exec, pkill wofi || $wofi_beats  # not working
#+end_src

* Dispatchers
#+begin_src conf
exec-once = nmcli device connect wlan0
exec-once = $scriptsDir/startup
exec-once = /usr/lib/polkit-kde-authentication-agent-1
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = [workspace special silent] $term
exec-once = [workspace 1] emacsclient -c -a emacs
# exec-once = $scriptsDir/portal
exec-once = copyq
exec-once = [workspace 2 silent] $browser
exec-once = [workspace 8 silent] $discord
# exec-once = swayidle -w timeout 900 '$lock' timeout 1800 'hyprctl dispatch dpms off' resume 'hyprctl dispatch dpms on' before-sleep '$lock'
exec-once = swayidle -w timeout 900 '$lock'
# exec-once = ibus-daemon -rxR
#+end_src

* Window Rules
#+begin_src conf
windowrule = float, yad|nm-connection-editor|Rofi
windowrule = float, feh|Gimp|qt5ct
windowrule = float, title:^(Firefox — Sharing Indicator)$
#windowrule = workspace special:discord silent, Electron
windowrule = move 1511 919, showmethekey-gtk
windowrule = float, showmethekey-gtk
windowrule = noborder, showmethekey-gtk
windowrule = opacity 1.0 override 1.0 override, ^(showmethekey-gtk)$
windowrule = noblur, showmethekey-gtk
windowrule = nofocus, showmethekey-gtk
windowrule = noanim, showmethekey-gtk
windowrule = noshadow, showmethekey-gtk

windowrule = float, wlogout
windowrule = move 0 0, wlogout
windowrule = size 100% 100%, wlogout
windowrule = animation slide, wlogout

windowrulev2 = bordercolor $green $red, floating:1
windowrulev2 = bordercolor $lavender $mauve, fullscreen:1
windowrulev2 = opacity 0.8 0.8, pinned:1
#windowrulev2 = workspace 8 silent, class:^(lutris)$, title:^(Lutris)$
windowrulev2 = float, class:^(firefox)$, title:^(Picture-in-Picture)$

# for waybar yay update click, cava
windowrulev2 = animation slide, class:^(update)$, title:^(update)$
windowrulev2 = float, class:^(update)$, title:^(update)$
windowrulev2 = size 60% 50%, class:^(update)$, title:^(update)$
windowrulev2 = move 380 8, class:^(update)$, title:^(update)$

# emacs
windowrulev2 = fullscreen, class:^(Emacs)$, title:^(org-capture)$

# steam and games
windowrulev2 = workspace 9, class:^(Steam)$, title:^(Steam)$
windowrulev2 = fullscreen, class:^(csgo)$, title:^(Counter-Strike: Global Offensive)$
#+end_src

* Animations

* Dwindle Layout
#+begin_src conf
dwindle {
  pseudotile = true
  preserve_split = true
  special_scale_factor = 0.8
}
#+end_src

* Master Layout
#+begin_src conf
master {
  new_is_master = false
  special_scale_factor = 0.8
}
#+end_src

